% ca_axiom'l :
pctop'
(
   {A:o} {D1:neg A} {E:neg A -> #} ca' A ([p:pos A] axiom' D1 p) E (E D1)
)
S.

% ca_axiom'r :
pctop'
(
   {A:o} {D:pos A -> #} {E1:pos A} ca' A D ([n:neg A] axiom' n E1) (D E1)
)
S.

% ca_and1' :
pctop'
(
   {A:o} {D1':pos A -> #} {E1':neg A -> #} {F:#} {B:o}
      {D1:pos (A and B) -> pos A -> #} {D2:pos (A and B) -> pos B -> #}
      {E1:neg (A and B) -> neg A -> #}
      ca' A ([p1:pos A] D1' p1) ([n1:neg A] E1' n1) F
         -> ({n1:neg A}
                ca' (A and B) ([p:pos (A and B)] andr' (D1 p) (D2 p) p)
                    ([n:neg (A and B)] E1 n n1) (E1' n1))
         -> ({p1:pos A}
                ca' (A and B) ([p:pos (A and B)] D1 p p1)
                    ([n:neg (A and B)] andl1' (E1 n) n) (D1' p1))
         -> ca' (A and B) ([p:pos (A and B)] andr' (D1 p) (D2 p) p)
                ([n:neg (A and B)] andl1' (E1 n) n) F
)
S.

% ca_and2' :
pctop'
(
   {B:o} {D2':pos B -> #} {E2':neg B -> #} {F:#} {A:o}
      {D1:pos (A and B) -> pos A -> #} {D2:pos (A and B) -> pos B -> #}
      {E2:neg (A and B) -> neg B -> #}
      ca' B ([p2:pos B] D2' p2) ([n2:neg B] E2' n2) F
         -> ({n2:neg B}
                ca' (A and B) ([p:pos (A and B)] andr' (D1 p) (D2 p) p)
                    ([n:neg (A and B)] E2 n n2) (E2' n2))
         -> ({p2:pos B}
                ca' (A and B) ([p:pos (A and B)] D2 p p2)
                    ([n:neg (A and B)] andl2' (E2 n) n) (D2' p2))
         -> ca' (A and B) ([p:pos (A and B)] andr' (D1 p) (D2 p) p)
                ([n:neg (A and B)] andl2' (E2 n) n) F
)
S.

% ca_imp' :
pctop'
(
   {B:o} {F2:pos B -> #} {E2':neg B -> #} {F:#} {A:o} {E1':pos A -> #}
      {D1':neg A -> pos B -> #} {D1:pos (A imp B) -> neg A -> pos B -> #}
      {E1:neg (A imp B) -> pos A -> #} {E2:neg (A imp B) -> neg B -> #}
      ca' B ([p2:pos B] F2 p2) ([n2:neg B] E2' n2) F
         -> ({p2:pos B} ca' A ([p1:pos A] E1' p1) ([n1:neg A] D1' n1 p2) 
(F2 p2))
         -> ({n1:neg A} {p2:pos B}
                ca' (A imp B) ([p:pos (A imp B)] D1 p n1 p2)
                    ([n:neg (A imp B)] impl' (E1 n) (E2 n) n) (D1' n1 p2))
         -> ({n2:neg B}
                ca' (A imp B) ([p:pos (A imp B)] impr' (D1 p) p)
                    ([n:neg (A imp B)] E2 n n2) (E2' n2))
         -> ({p1:pos A}
                ca' (A imp B) ([p:pos (A imp B)] impr' (D1 p) p)
                    ([n:neg (A imp B)] E1 n p1) (E1' p1))
         -> ca' (A imp B) ([p:pos (A imp B)] impr' (D1 p) p)
                ([n:neg (A imp B)] impl' (E1 n) (E2 n) n) F
)
S.

% ca_or1' :
pctop'
(
   {A:o} {D1':pos A -> #} {E1':neg A -> #} {F:#} {B:o}
      {D1:pos (A or B) -> pos A -> #} {E1:neg (A or B) -> neg A -> #}
      {E2:neg (A or B) -> neg B -> #}
      ca' A D1' E1' F
         -> ({p1:pos A}
                ca' (A or B) ([p:pos (A or B)] D1 p p1)
                    ([n:neg (A or B)] orl' (E1 n) (E2 n) n) (D1' p1))
         -> ({n1:neg A}
                ca' (A or B) ([p:pos (A or B)] orr1' (D1 p) p)
                    ([n:neg (A or B)] E1 n n1) (E1' n1))
         -> ca' (A or B) ([p:pos (A or B)] orr1' (D1 p) p)
                ([n:neg (A or B)] orl' (E1 n) (E2 n) n) F
)
S.

% ca_or2' :
pctop'
(
   {B:o} {D2':pos B -> #} {E2':neg B -> #} {F:#} {A:o}
      {D2:pos (A or B) -> pos B -> #} {E1:neg (A or B) -> neg A -> #}
      {E2:neg (A or B) -> neg B -> #}
      ca' B D2' E2' F
         -> ({p2:pos B}
                ca' (A or B) ([p:pos (A or B)] D2 p p2)
                    ([n:neg (A or B)] orl' (E1 n) (E2 n) n) (D2' p2))
         -> ({n2:neg B}
                ca' (A or B) ([p:pos (A or B)] orr2' (D2 p) p)
                    ([n:neg (A or B)] E2 n n2) (E2' n2))
         -> ca' (A or B) ([p:pos (A or B)] orr2' (D2 p) p)
                ([n:neg (A or B)] orl' (E1 n) (E2 n) n) F
)
S.

% ca_not' :
pctop'
(
   {A:o} {E1':pos A -> #} {D1':neg A -> #} {F:#} {D1:pos (not A) -> neg A -> #}
      {E1:neg (not A) -> pos A -> #}
      ca' A E1' D1' F
         -> ({n1:neg A}
                ca' (not A) ([p:pos (not A)] D1 p n1)
                    ([n:neg (not A)] notl' (E1 n) n) (D1' n1))
         -> ({p1:pos A}
                ca' (not A) ([p:pos (not A)] notr' (D1 p) p)
                    ([n:neg (not A)] E1 n p1) (E1' p1))
         -> ca' (not A) ([p:pos (not A)] notr' (D1 p) p)
                ([n:neg (not A)] notl' (E1 n) n) F
)
S.

% ca_forall' :
pctop'
(
   {A:i -> o} {T:i} {D1':pos (A T) -> #} {E1':neg (A T) -> #} {F:#}
      {D1:pos (forall A) -> ({T1:i} pos (A T1) -> #)}
      {E1:neg (forall A) -> neg (A T) -> #}
      ca' (A T) D1' E1' F
         -> ({p1:pos (A T)}
                ca' (forall A) ([p:pos (forall A)] D1 p T p1)
                    ([n:neg (forall A)] foralll' T (E1 n) n) (D1' p1))
         -> ({n1:neg (A T)}
                ca' (forall A) ([p:pos (forall A)] forallr' (D1 p) p)
                    ([n:neg (forall A)] E1 n n1) (E1' n1))
         -> ca' (forall A) ([p:pos (forall A)] forallr' (D1 p) p)
                ([n:neg (forall A)] foralll' T (E1 n) n) F
)
S.

% ca_exists' :
pctop'
(
   {A:i -> o} {T:i} {D1':pos (A T) -> #} {E1':neg (A T) -> #} {F:#}
      {D1:pos (exists A) -> pos (A T) -> #}
      {E1:neg (exists [a:i] A a) -> ({a:i} neg (A a) -> #)}
      ca' (A T) D1' E1' F
         -> ({p1:pos (A T)}
                ca' (exists A) ([p:pos (exists A)] D1 p p1)
                    ([n:neg (exists [a:i] A a)] existsl' (E1 n) n) (D1' p1))
         -> ({n1:neg (A T)}
                ca' (exists A) ([p:pos (exists A)] existsr' T (D1 p) p)
                    ([n:neg (exists [a:i] A a)] E1 n T n1) (E1' n1))
         -> ca' (exists A) ([p:pos (exists A)] existsr' T (D1 p) p)
                ([n:neg (exists [a:i] A a)] existsl' (E1 n) n) F
)
S.

% car_axiom' :
pctop'
(
   {A:o} {D:pos A -> #} {B:o} {N:neg B} {P:pos B}
      ca' A D ([n:neg A] axiom' N P) (axiom' N P)
)
S.

% car_andr' :
pctop'
(
   {B2:o} {A:o} {D:pos A -> #} {E2:neg A -> pos B2 -> #} {F2:pos B2 -> #} {B1:o}
      {E1:neg A -> pos B1 -> #} {F1:pos B1 -> #} {P:pos (B1 and B2)}
      ({p2:pos B2} ca' A D ([n:neg A] E2 n p2) (F2 p2))
         -> ({p1:pos B1} ca' A D ([n:neg A] E1 n p1) (F1 p1))
         -> ca' A D ([n:neg A] andr' (E1 n) (E2 n) P) (andr' F1 F2 P)
)
S.

% car_andl1' :
pctop'
(
   {B1:o} {A:o} {D:pos A -> #} {E1:neg A -> neg B1 -> #} {F1:neg B1 -> #} {B:o}
      {N:neg (B1 and B)}
      ({n1:neg B1} ca' A D ([n:neg A] E1 n n1) (F1 n1))
         -> ca' A D ([n:neg A] andl1' (E1 n) N) (andl1' F1 N)
)
S.

% car_andl2' :
pctop'
(
   {B2:o} {A:o} {D:pos A -> #} {E2:neg A -> neg B2 -> #} {F2:neg B2 -> #} {B:o}
      {N:neg (B and B2)}
      ({n2:neg B2} ca' A D ([n:neg A] E2 n n2) (F2 n2))
         -> ca' A D ([n:neg A] andl2' (E2 n) N) (andl2' F2 N)
)
S.

% car_impr' :
pctop'
(
   {B1:o} {B2:o} {A:o} {D:pos A -> #} {E1:neg A -> neg B1 -> pos B2 -> #}
      {F1:neg B1 -> pos B2 -> #} {P:pos (B1 imp B2)}
      ({n1:neg B1} {p2:pos B2} ca' A D ([n:neg A] E1 n n1 p2) (F1 n1 p2))
         -> ca' A D ([n:neg A] impr' (E1 n) P) (impr' F1 P)
)
S.

% car_impl' :
pctop'
(
   {B2:o} {A:o} {D:pos A -> #} {E2:neg A -> neg B2 -> #} {F2:neg B2 -> #} {B1:o}
      {E1:neg A -> pos B1 -> #} {F1:pos B1 -> #} {N:neg (B1 imp B2)}
      ({n2:neg B2} ca' A D ([n:neg A] E2 n n2) (F2 n2))
         -> ({p1:pos B1} ca' A D ([n:neg A] E1 n p1) (F1 p1))
         -> ca' A D ([n:neg A] impl' (E1 n) (E2 n) N) (impl' F1 F2 N)
)
S.

% car_orr1' :
pctop'
(
   {B1:o} {A:o} {D:pos A -> #} {E1:neg A -> pos B1 -> #} {F1:pos B1 -> #} {B:o}
      {P:pos (B1 or B)}
      ({p1:pos B1} ca' A D ([n:neg A] E1 n p1) (F1 p1))
         -> ca' A D ([n:neg A] orr1' (E1 n) P) (orr1' F1 P)
)
S.

% car_orr2' :
pctop'
(
   {B2:o} {A:o} {D:pos A -> #} {E2:neg A -> pos B2 -> #} {F2:pos B2 -> #} {B:o}
      {P:pos (B or B2)}
      ({p2:pos B2} ca' A D ([n:neg A] E2 n p2) (F2 p2))
         -> ca' A D ([n:neg A] orr2' (E2 n) P) (orr2' F2 P)
)
S.

% car_orl' :
pctop'
(
   {B2:o} {A:o} {D:pos A -> #} {E2:neg A -> neg B2 -> #} {F2:neg B2 -> #} {B1:o}
      {E1:neg A -> neg B1 -> #} {F1:neg B1 -> #} {N:neg (B1 or B2)}
      ({n2:neg B2} ca' A D ([n:neg A] E2 n n2) (F2 n2))
         -> ({n1:neg B1} ca' A D ([n:neg A] E1 n n1) (F1 n1))
         -> ca' A D ([n:neg A] orl' (E1 n) (E2 n) N) (orl' F1 F2 N)
)
S.

% car_notr' :
pctop'
(
   {B1:o} {A:o} {D:pos A -> #} {E1:neg A -> neg B1 -> #} {F1:neg B1 -> #}
      {P:pos (not B1)}
      ({n1:neg B1} ca' A D ([n:neg A] E1 n n1) (F1 n1))
         -> ca' A D ([n:neg A] notr' (E1 n) P) (notr' F1 P)
)
S.

% car_notl' :
pctop'
(
   {B1:o} {A:o} {D:pos A -> #} {E1:neg A -> pos B1 -> #} {F1:pos B1 -> #}
      {N:neg (not B1)}
      ({p1:pos B1} ca' A D ([n:neg A] E1 n p1) (F1 p1))
         -> ca' A D ([n:neg A] notl' (E1 n) N) (notl' F1 N)
)
S.

% car_truer' :
pctop'
(
   {A:o} {D:pos A -> #} {P:pos true} ca' A D ([n:neg A] truer' P) (truer' P)
)
S.

% car_falsel' :
pctop'
(
   {A:o} {D:pos A -> #} {N:neg false} ca' A D ([n:neg A] falsel' N) (falsel' N)
)
S.

% car_forallr' :
pctop'
(
   {B1:i -> o} {A:o} {D:pos A -> #} {E1:neg A -> ({T:i} pos (B1 T) -> #)}
      {F1:{T:i} pos (B1 T) -> #} {P:pos (forall [a:i] B1 a)}
      ({a:i} {p1:pos (B1 a)} ca' A D ([n:neg A] E1 n a p1) (F1 a p1))
         -> ca' A D ([n:neg A] forallr' (E1 n) P) (forallr' F1 P)
)
S.

% car_foralll' :
pctop'
(
   {B:i -> o} {T:i} {A:o} {D:pos A -> #} {E1:neg A -> neg (B T) -> #}
      {F1:neg (B T) -> #} {N:neg (forall B)}
      ({n1:neg (B T)} ca' A D ([n:neg A] E1 n n1) (F1 n1))
         -> ca' A D ([n:neg A] foralll' T (E1 n) N) (foralll' T F1 N)
)
S.

% car_existsr' :
pctop'
(
   {B:i -> o} {T:i} {A:o} {D:pos A -> #} {E1:neg A -> pos (B T) -> #}
      {F1:pos (B T) -> #} {P:pos (exists B)}
      ({p1:pos (B T)} ca' A D ([n:neg A] E1 n p1) (F1 p1))
         -> ca' A D ([n:neg A] existsr' T (E1 n) P) (existsr' T F1 P)
)
S.

% car_existsl' :
pctop'
(
   {B1:i -> o} {A:o} {D:pos A -> #} {E1:neg A -> ({T:i} neg (B1 T) -> #)}
      {F1:{T:i} neg (B1 T) -> #} {N:neg (exists [a:i] B1 a)}
      ({a:i} {n1:neg (B1 a)} ca' A D ([n:neg A] E1 n a n1) (F1 a n1))
         -> ca' A D ([n:neg A] existsl' (E1 n) N) (existsl' F1 N)
)
S.

%% Left Commutative Conversions.
% cal_axiom' :
pctop'
(
   {A:o} {D:pos A -> #} {B:o} {N:neg B} {P:pos B}
      ca' A D ([n:neg A] axiom' N P) (axiom' N P)
)
S.

% cal_andr' :
pctop'
(
   {B2:o} {A:o} {D2:pos A -> pos B2 -> #} {E:neg A -> #} {F2:pos B2 -> #} {B1:o}
      {D1:pos A -> pos B1 -> #} {F1:pos B1 -> #} {P:pos (B1 and B2)}
      ({p2:pos B2} ca' A ([p:pos A] D2 p p2) E (F2 p2))
         -> ({p1:pos B1} ca' A ([p:pos A] D1 p p1) E (F1 p1))
         -> ca' A ([p:pos A] andr' (D1 p) (D2 p) P) E (andr' F1 F2 P)
)
S.

% cal_andl1' :
pctop'
(
   {B1:o} {A:o} {D1:pos A -> neg B1 -> #} {E:neg A -> #} {F1:neg B1 -> #} {B:o}
      {N:neg (B1 and B)}
      ({n1:neg B1} ca' A ([p:pos A] D1 p n1) E (F1 n1))
         -> ca' A ([p:pos A] andl1' (D1 p) N) E (andl1' F1 N)
)
S.

% cal_andl2' :
pctop'
(
   {B2:o} {A:o} {D2:pos A -> neg B2 -> #} {E:neg A -> #} {F2:neg B2 -> #} {B:o}
      {N:neg (B and B2)}
      ({n2:neg B2} ca' A ([p:pos A] D2 p n2) E (F2 n2))
         -> ca' A ([p:pos A] andl2' (D2 p) N) E (andl2' F2 N)
)
S.

% cal_impr' :
pctop'
(
   {B1:o} {B2:o} {A:o} {D1:pos A -> neg B1 -> pos B2 -> #} {E:neg A -> #}
      {F1:neg B1 -> pos B2 -> #} {P:pos (B1 imp B2)}
      ({n1:neg B1} {p2:pos B2} ca' A ([p:pos A] D1 p n1 p2) E (F1 n1 p2))
         -> ca' A ([p:pos A] impr' (D1 p) P) E (impr' F1 P)
)
S.

% cal_impl' :
pctop'
(
   {B2:o} {A:o} {D2:pos A -> neg B2 -> #} {E:neg A -> #} {F2:neg B2 -> #} {B1:o}
      {D1:pos A -> pos B1 -> #} {F1:pos B1 -> #} {N:neg (B1 imp B2)}
      ({n2:neg B2} ca' A ([p:pos A] D2 p n2) E (F2 n2))
         -> ({p1:pos B1} ca' A ([p:pos A] D1 p p1) E (F1 p1))
         -> ca' A ([p:pos A] impl' (D1 p) (D2 p) N) E (impl' F1 F2 N)
)
S.

% cal_orr1' :
pctop'
(
   {B1:o} {A:o} {D1:pos A -> pos B1 -> #} {E:neg A -> #} {F1:pos B1 -> #} {B:o}
      {P:pos (B1 or B)}
      ({p1:pos B1} ca' A ([p:pos A] D1 p p1) E (F1 p1))
         -> ca' A ([p:pos A] orr1' (D1 p) P) E (orr1' F1 P)
)
S.

% cal_orr2' :
pctop'
(
   {B2:o} {A:o} {D2:pos A -> pos B2 -> #} {E:neg A -> #} {F2:pos B2 -> #} {B:o}
      {P:pos (B or B2)}
      ({p2:pos B2} ca' A ([p:pos A] D2 p p2) E (F2 p2))
         -> ca' A ([p:pos A] orr2' (D2 p) P) E (orr2' F2 P)
)
S.

% cal_orl' :
pctop'
(
   {B2:o} {A:o} {D2:pos A -> neg B2 -> #} {E:neg A -> #} {F2:neg B2 -> #} {B1:o}
      {D1:pos A -> neg B1 -> #} {F1:neg B1 -> #} {N:neg (B1 or B2)}
      ({n2:neg B2} ca' A ([p:pos A] D2 p n2) E (F2 n2))
         -> ({n1:neg B1} ca' A ([p:pos A] D1 p n1) E (F1 n1))
         -> ca' A ([p:pos A] orl' (D1 p) (D2 p) N) E (orl' F1 F2 N)
)
S.

% cal_notr' :
pctop'
(
   {B1:o} {A:o} {D1:pos A -> neg B1 -> #} {E:neg A -> #} {F1:neg B1 -> #}
      {P:pos (not B1)}
      ({n1:neg B1} ca' A ([p:pos A] D1 p n1) E (F1 n1))
         -> ca' A ([p:pos A] notr' (D1 p) P) E (notr' F1 P)
)
S.

% cal_notl' :
pctop'
(
   {B1:o} {A:o} {D1:pos A -> pos B1 -> #} {E:neg A -> #} {F1:pos B1 -> #}
      {N:neg (not B1)}
      ({p1:pos B1} ca' A ([p:pos A] D1 p p1) E (F1 p1))
         -> ca' A ([p:pos A] notl' (D1 p) N) E (notl' F1 N)
)
S.

% cal_truer' :
pctop'
(
   {A:o} {P:pos true} {E:neg A -> #} ca' A ([p:pos A] truer' P) E (truer' P)
)
S.

% cal_falsel' :
pctop'
(
   {A:o} {N:neg false} {E:neg A -> #} ca' A ([p:pos A] falsel' N) E (falsel' N)
)
S.

% cal_forallr' :
pctop'
(
   {B1:i -> o} {A:o} {D1:pos A -> ({T:i} pos (B1 T) -> #)} {E:neg A -> #}
      {F1:{T:i} pos (B1 T) -> #} {P:pos (forall [a:i] B1 a)}
      ({a:i} {p1:pos (B1 a)} ca' A ([p:pos A] D1 p a p1) E (F1 a p1))
         -> ca' A ([p:pos A] forallr' (D1 p) P) E (forallr' F1 P)
)
S.

% cal_foralll' :
pctop'
(
   {B:i -> o} {T:i} {A:o} {D1:pos A -> neg (B T) -> #} {E:neg A -> #}
      {F1:neg (B T) -> #} {N:neg (forall B)}
      ({n1:neg (B T)} ca' A ([p:pos A] D1 p n1) E (F1 n1))
         -> ca' A ([p:pos A] foralll' T (D1 p) N) E (foralll' T F1 N)
)
S.

% cal_existsr' :
pctop'
(
   {B:i -> o} {T:i} {A:o} {D1:pos A -> pos (B T) -> #} {E:neg A -> #}
      {F1:pos (B T) -> #} {P:pos (exists B)}
      ({p1:pos (B T)} ca' A ([p:pos A] D1 p p1) E (F1 p1))
         -> ca' A ([p:pos A] existsr' T (D1 p) P) E (existsr' T F1 P)
)
S.

% cal_existsl' :
pctop'
(
   {B1:i -> o} {A:o} {D1:pos A -> ({T:i} neg (B1 T) -> #)} {E:neg A -> #}
      {F1:{T:i} neg (B1 T) -> #} {N:neg (exists [a:i] B1 a)}
      ({a:i} {n1:neg (B1 a)} ca' A ([p:pos A] D1 p a n1) E (F1 a n1))
         -> ca' A ([p:pos A] existsl' (D1 p) N) E (existsl' F1 N)
)
S.

